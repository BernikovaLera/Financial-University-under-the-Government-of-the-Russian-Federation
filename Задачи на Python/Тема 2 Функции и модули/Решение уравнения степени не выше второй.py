# Задание 24
#? Напишите функцию для решения уравнений степени не выше второй (квадратные и линейные): 
#? - если у функции три аргумента, их надо трактовать как a, b и c в уравнении ax 2 + bx + c = 0; 
#? - если два — как коэффициенты b и c в уравнении bx + c = 0;
#? - если один — как коэффициент c в уравнении c = 0; 
#? - если список коэффициентов пуст или коэффициентов больше трёх, то функция должна вернуть None. 
#? Функция возвращает список, содержащий все корни уравнения (два, один или ни одного). 
#? Если корнем является любое значение x, функция возвращает список, содержащий символ «*» (["*"]).

import math # библиотека math содержит наиболее применяемые математические функции и константы
def rootsOfQuadraticEquation(a,b,c): #
    if a==0 and b==0 and c==0: # если все константы равны 0 то
        return ['None']# то функция должна вернуть None
    elif a == 0 and b == 0:# если а и b константы равны 0 то
        return ["0"]# коэффициент c в уравнении c = 0
    elif a==0:# если а равна 0 то
        return [(c*(-1))/b]# формула 
    elif b==0:# если b равна 0 то
        return [math.sqrt((-1*b)/a)]# формула
    elif  c==0:# если с равна 0 то
        return[0, (-1*b)/a]# формула
    else:#
        q = b**2# возведение в степень
        w = -4*a*c#  дискриминант
        D = q+w# дискриминант
        if D<0:# если дискриминант меньше нуля, то корней нет
            return["корней нет"]#
        elif D== 0:# если дискриминант равен нулю, то
            return[(-1*b)/(2*a)]# формула
        else:#
            D = math.sqrt(D)# корень дискриминанта
            return[int(((-1*b)-D)/(2*a)), ((-1*b)+D)/(2*a) ]#
a, b, c = input("уравнение вида ax 2 + bx + c = 0, но только коэффициенты: ").strip().split()# ввод
print(rootsOfQuadraticEquation(int(a),int(b),int(c)))#  вывод и вызов функции
