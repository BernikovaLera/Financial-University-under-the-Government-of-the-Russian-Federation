# 
#? 1  Проверьте, будет ли заданная строка палиндромом, если из нее удалить все рядом стоящие одинаковые 
#? символы. Палиндром - это такая строка, которая не изменяется, если все ее символы записать в обратном 
#? порядке. Например - "32aba23"

def isPalindrome(str): # Функция для проверки того, является ли строка палиндром или нет
    Len = len(str) # Длина строки
    for i in range(Len): # Провереть, является ли это палиндромом
        if (str[i] != str[Len - i - 1]): # Если палиндромные композиции не соблюдены
            return False
    return True # Возвращает true, поскольку str является палиндромным

def isCompressablePalindrome(str): # Функция для проверки того, является ли строка str палиндромной после удаления всех последовательных символов из str
    Len = len(str) # Длина строки 
    compressed = "" # Создать пустую сжатую строку
    compressed += str[0] # Первый символ всегда будет включен в конечную строку
    for i in range(1, Len): # Проверьте все символы из строки
        if (str[i] != str[i - 1]): # Если текущий символ не совпадает с предыдущим, то вставьте его в конечную строку
            compressed += str[i]
    return isPalindrome(compressed) # Проверка, является ли сжатая строка палиндромом

if __name__ == '__main__': #код, который защищает пользователей от случайного вызова скрипта, когда они не собирались этого делать.
    str = input("Введите строку: ") # Заданная строка
    if (isCompressablePalindrome(str)): # Вызов функции
        print("Да, палиндром")
    else:
        print("Нет, не палиндром")

